from .settings import SIZE_COMBINATION
from mastermind.utils.dir import get_resource, Dir
from mastermind.utils.parameters import Language, View

LANGUAGE = {
    'FR': {
        'preamble': """{start_h1}JEU DU MASTERMIND{end_h1}
{start_paragraph}Trouver la bonne combinaison de {SIZE_COMBINATION} couleurs secrètes que notre 'IA' aura générée.{return_line}
A chaque couleur bien positionnée, vous aurez en retour un indicateur rouge.{return_line}
A chaque couleur présente mais mal positionnée, vous aurez en retour un indicateur blanc.{end_paragraph}""",
        'warning': "Votre saisie est incorrecte...",
        'win_console': "Bravo ! Vous avez trouvé la combinaison secrète",
        'lose_console': "Dommage ! La combinaison secrète était",
        'win_window': "Bravo ! C'est gagné",
        'lose_window': "Dommage ! C'est perdu",
        'input_user': "Essai {try_number}/{max_tries} - Veuillez saisir vos {size_combination} chiffres pour les couleurs :",
        'clue': "Indicateurs :",
        'choose_color': "Entrez votre combinaison secrète en utilisant les chiffres des couleurs disponibles.",
        'close': "Fermer",
        'help': "Aide",
        'quit': "Quitter",
        'new_game': "Nouvelle partie",
        'submit': "Proposer",
        'main_window_title': "Devine la combinaison secrète - Up Your Skills",
        'select_color_window': "Sélectionner vos couleurs",
        'confirmation_window_title': "Confirmation",
        'message_confirmation': "Une partie est en cours !\nVoulez-vous vraiment l'arrêter ?",
        'yes': "Oui",
        'no': "Non",
        'start': "Lancer",
        'colors': "couleurs",
        'tries': "essais",
        'nb_colors_availables': "Nombre de couleurs disponibles : ",
        'nb_max_tries': "Nombre de tentatives maximum : ",
        'EASY': "facile",
        'NORMAL': "normal",
        'HARD': "difficile",
        'YELLOW': "jaune",
        'BLUE': "bleu",
        'RED': "rouge",
        'GREEN': "vert",
        'WHITE': "blanc",
        'MAGENTA': "magenta",
        'CYAN': "cyan",
        'BROWN': "marron",
        'BLACK': "noir",
        'GRAY': "gris",
    },
    'EN': {
        'preamble': """{start_h1}MASTERMIND GAME{end_h1}
{start_paragraph}Find the right combination of {SIZE_COMBINATION} secret colors generated by our 'AI'.{return_line}
For each correctly positioned color, you'll get a red indicator in return.{return_line}
For each color present but incorrectly positioned, you'll get a white indicator in return.{end_paragraph}""",
        'warning': "Your input is incorrect...",
        'win_console': "Congratulations! You've found the secret combination",
        'lose_console': "Too bad! The secret combination was",
        'win_window': "Congratulations! You've got it!",
        'lose_window': "Too bad! It's lost",
        'input_user': "Attempt {try_number}/{max_tries} - Please enter your {size_combination} digits for colors:",
        'clue': "Indicators:",
        'choose_color': "Enter your secret combination using the numbers of the available colors.",
        'close': "Close",
        'help': "Help",
        'quit': "Quit",
        'new_game': "New game",
        'submit': "Submit",
        'main_window_title': "Guess the secret combination - Up Your Skills",
        'select_color_window': "Select your colors",
        'confirmation_window_title': "Confirmation",
        'message_confirmation': "There's a game on!\nDo you really want to stop it?",
        'yes': "Yes",
        'no': "No",
        'start': "Start",
        'colors': "colors",
        'tries': "tries",
        'nb_colors_availables': "Number of colors available: ",
        'nb_max_tries': "Maximum number of attempts: ",
        'EASY': "easy",
        'NORMAL': "normal",
        'HARD': "hard",
        'YELLOW': "yellow",
        'BLUE': "blue",
        'RED': "red",
        'GREEN': "green",
        'WHITE': "white",
        'MAGENTA': "magenta",
        'CYAN': "cyan",
        'BROWN': "brown",
        'BLACK': "black",
        'GRAY': "gray",
    }
}


def get_translation(language: Language, key: str) -> str:
    """Retourne un texte dans la langue demandée"""
    return LANGUAGE[language][key]

def get_help(mode: View, language: Language) -> str:
    """Retourne le texte d'aide à afficher en fonction de la vue"""
    start_h1 = end_h1 = start_paragraph = end_paragraph = return_line = ""
    if mode == View.WINDOW:
        start_h1, end_h1 = "<h1>", "</h1>"
        start_paragraph, end_paragraph = "<p>", "</p>"
        return_line = "<br />"
    preamble = get_translation(language, "preamble").format(
        start_h1=start_h1, end_h1=end_h1,
        start_paragraph=start_paragraph, end_paragraph=end_paragraph,
        return_line=return_line, SIZE_COMBINATION=SIZE_COMBINATION
    )
    html_filename = f"help_{language.name}.html"
    return (f"{preamble}\n\n{get_translation(language, "choose_color")}\n"
            if mode == View.CONSOLE else
            f"{preamble}\n{get_resource(Dir.HTML / html_filename)}")
